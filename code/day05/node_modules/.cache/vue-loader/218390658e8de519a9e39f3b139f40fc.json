{"remainingRequest":"D:\\h5-1911\\three\\three_1911\\Vue_nanshig\\nanshig\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\h5-1911\\three\\three_1911\\Vue_nanshig\\nanshig\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\h5-1911\\three\\three_1911\\Vue_nanshig\\nanshig\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\h5-1911\\three\\three_1911\\Vue_nanshig\\nanshig\\src\\components\\GoodsList.vue?vue&type=template&id=0ba06f14&scoped=true&","dependencies":[{"path":"D:\\h5-1911\\three\\three_1911\\Vue_nanshig\\nanshig\\src\\components\\GoodsList.vue","mtime":1576495204000},{"path":"D:\\h5-1911\\three\\three_1911\\Vue_nanshig\\nanshig\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\h5-1911\\three\\three_1911\\Vue_nanshig\\nanshig\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\h5-1911\\three\\three_1911\\Vue_nanshig\\nanshig\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\h5-1911\\three\\three_1911\\Vue_nanshig\\nanshig\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}